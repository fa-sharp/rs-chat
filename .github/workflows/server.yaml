name: CI
on:
  push:
    branches: ["main"]
    paths:
      - "server/**"
      - "web/**"
      - Dockerfile
  pull_request:
    types: [opened, synchronize, reopened]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  RUST_VERSION: 1.85
  NODE_VERSION: 22

jobs:
  build-web:
    name: Build frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          package_json_file: web/package.json
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: web/pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint:ci
      - name: Check types
        run: pnpm typecheck
      - name: Build
        run: pnpm build

  build-server:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    name: Build server on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./server
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        run: rustup toolchain install ${{ env.RUST_VERSION }} --profile minimal --no-self-update && rustup default ${{ env.RUST_VERSION }}
      - name: Setup build dependencies on macOS
        if: startsWith(runner.os, 'macOS')
        run: brew link --force libpq
      - name: Setup rust-cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: ./server
      # - name: Install nextest
      #   uses: taiki-e/install-action@v2
      #   with:
      #     tool: nextest@0.9

      - name: Run cargo check
        run: cargo check --profile ci

      - name: Run cargo build
        run: PQ_LIB_DIR="$(brew --prefix libpq)/lib" cargo build --profile ci

      # - name: Test crate
      #   run: cargo nextest run --all-features --profile ci
      # - name: Test docs
      #   run: cargo test --doc --all-features
